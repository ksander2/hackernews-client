{"version":3,"sources":["common/Colors.js","styles/GlobalStyles.tsx","styles/NavMenu.tsx","components/NavMenu.tsx","components/DefaultPage.tsx","components/PageNotFound.tsx","styles/App.tsx","models/apiModels.ts","service/hackerNewsService.ts","store/storiesStore.ts","components/Loader.tsx","styles/StoryView.tsx","utils.ts","components/StoryView.tsx","styles/StoriesListView.tsx","styles/Loader.tsx","hooks/useFetchStoriesIds.tsx","components/StoriesListView.tsx","selectors/storiesListViewSelectors.ts","store/selectors.ts","containers/StoriesListViewContainer.ts","mappers/pathToCategory.ts","common/Constants.ts","styles/CommentsListView.tsx","styles/Comment.tsx","components/Comment.tsx","components/CommentsListView.tsx","hooks/useFetchStory.tsx","hooks/useFetchComments.tsx","components/ErrorBoundary.tsx","store/rootReducer.ts","misc/translations/resources.ts","misc/translations/index.tsx","components/App.tsx","index.tsx"],"names":["DarkerGray","WeakGray","Gray","GlobalStyles","createGlobalStyle","styled","NavMenuWrapper","div","Colors","NavLinkStyled","NavLink","NavMenu","menuItems","t","useTranslation","map","item","activeClassName","id","to","DefaultPage","PageNotFound","location","pathname","BodyWrapper","StoryType","Union","Literal","StoriesIdsApiModel","$Array","$Number","StoryApiModel","Record","by","$String","Or","Undefined","type","deleted","$Boolean","time","text","dead","parent","kids","url","score","title","descendants","convertToStoriesIds","apiModel","convertToStory","apiBy","apiTitle","baseUrl","itemPath","jsonFormat","handleErrors","response","ok","Error","status","statusText","getStoriesIdArray","categoryPath","a","fetch","then","resp","json","responseApi","check","getStoryById","getStoriesByArrayId","ids","Promise","all","storyId","storyAdapter","createEntityAdapter","selectId","story","sortComparer","b","getInitialState","loadStage","storiesSlice","createSlice","name","initialState","reducers","fetchStoriesRequest","state","fetchStoriesSucceed","payload","setAll","fetchNextPageStoriesSucceed","addMany","fetchStoriesFailed","resetStories","actions","getSelectors","selectAll","selectTotal","Loader","StoryWrapper","StoryTitle","StoryAttributes","span","StoryLink","Link","hoursAgoFromDate","dateTime","Date","now","getHours","StoryView","memo","hourAgo","useMemo","content","length","path","href","StoryListWrapper","LoadMoreButton","button","ButtonLoaderWrapper","LoaderWrapper","getStoriesIds","categoryStories","getStoriesState","createSelector","stories","isStoriesLoading","isLoading","getStories","selectAllStories","hasData","mapDispatchToProps","fetchStories","isNew","dispatch","console","log","connect","useState","page","setPage","useLocation","category","substr","pathToCategory","storiesIds","setStoriesIds","loadStageStory","setLoadStageStory","useEffect","res","sort","catch","e","useFetchStoriesIds","idsLoadStage","slice","handleLoadMoreClick","useCallback","nextPageIds","splice","prev","onClick","CommentsListWrapper","CommentsWrapper","CommentsAttributes","Comment","data","parse","CommentsListView","setStory","Number","useFetchStory","useParams","storyLoadStage","comments","setComments","loadStageComments","setLoadStageComments","undefined","fetchedComments","useFetchComments","commentsLoadStage","useIsLoading","comment","ErrorBoundary","props","hasError","error","errorInfo","this","children","Component","combineReducers","storiesReducer","resources","en","navMenu","pageNotFound","views","config","Object","keys","interpolation","escapeValue","lng","fallbackLng","cache","enabled","i18next","init","i18nextConfig","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","listMenuItem","App","I18nextProvider","i18n","basename","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20c0ee76.chunk.js","sourcesContent":["export const White = '#FFFFFF';\nexport const Transparent = 'transparent';\nexport const DarkerMainColor = '#080F36';\nexport const DarkGray = '#2d2d2d';\nexport const DarkerGray = '#151515';\nexport const WeakGray = '#BFBFBF';\nexport const Gray = '#393c3e';\nexport const DarkBodyBackground = '#1A1C20';\nexport const Green = '#4CAF50';\n","import styled, { createGlobalStyle } from 'styled-components';\nimport { WeakGray, DarkerGray } from '../common/Colors';\n\nexport const GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family: 'Nunito-sans';\n    font-weight: 200;\n    font-style: normal;\n    font-stretch: normal;\n  }\n\n  body {\n    margin: 0;\n\n    background-color: ${DarkerGray};\n\n    color: ${WeakGray};\n    font-family: 'Nunito-sans', sans-serif;\n    font-weight: 400;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font-family: inherit;\n    vertical-align: baseline;\n  }\n\n  table {\n    border-collapse: separate;\n    border-spacing: 0;\n  }\n\n  textarea {\n    font-family: inherit;\n  }\n\n  button {\n    font-family: inherit;\n  }\n`;\n\nexport const TopFixedContainer = styled('div')`\n  position: sticky;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 10;\n  flex-shrink: 0;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport * as Colors from '../common/Colors';\n\nexport const NavMenuWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n\n  background-color: ${Colors.Gray};\n  overflow: hidden;\n  margin-bottom: 50px;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  display: block;\n  color: ${Colors.WeakGray};\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n  font-size: 17px;\n\n  &:hover {\n    background-color: ${Colors.WeakGray};\n    color: black;\n  }\n\n  &.active {\n    color: ${Colors.White};\n    background-color: ${Colors.Green};\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavMenuWrapper, NavLinkStyled } from '../styles/NavMenu';\n\ntype NavMenuProps = {\n  menuItems: string[];\n};\n\nexport const NavMenu: React.FC<NavMenuProps> = ({ menuItems }) => {\n  const { t } = useTranslation('navMenu');\n  return (\n    <NavMenuWrapper>\n      {menuItems.map((item) => (\n        <NavLinkStyled\n          key={`menu-item-${item}`}\n          activeClassName=\"active\"\n          id={`id-item-${item}`}\n          to={`/${item}`}\n        >\n          {t(item)}\n        </NavLinkStyled>\n      ))}\n    </NavMenuWrapper>\n  );\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst DefaultPage: React.FC = () => <Redirect to=\"/top\" />;\n\nexport default DefaultPage;\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\ntype NotFoundProps = RouteComponentProps;\n\nexport const PageNotFound: React.FC<NotFoundProps> = ({ location }) => {\n  const { t } = useTranslation('pageNotFound');\n  return (\n    <span>\n      {t('pageNotFound')} {location.pathname}\n    </span>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BodyWrapper = styled('div')`\n  width: 80%;\n  margin: auto;\n`;\n","import {\n  Boolean as $Boolean,\n  String as $String,\n  Number as $Number,\n  Array as $Array,\n  Static as $Static,\n  Record,\n  Union,\n  Literal,\n  Undefined,\n} from 'runtypes';\n\nimport { StoriesIds, Story } from '../types/story';\n\nconst StoryType = Union(\n  Literal('job'),\n  Literal('story'),\n  Literal('comment'),\n  Literal('poll'),\n  Literal('pollopt'),\n);\n\nexport const StoriesIdsApiModel = $Array($Number);\nexport type StoriesIdsApiModel = $Static<typeof StoriesIdsApiModel>;\n\nexport const StoryApiModel = Record({\n  id: $Number,\n  by: $String.Or(Undefined),\n  type: StoryType,\n  deleted: $Boolean.Or(Undefined),\n  time: $Number,\n  text: $String.Or(Undefined),\n  dead: $Boolean.Or(Undefined),\n  parent: $Number.Or(Undefined),\n  kids: $Array($Number).Or(Undefined),\n  url: $String.Or(Undefined),\n  score: $Number.Or(Undefined),\n  title: $String.Or(Undefined),\n  descendants: $Number.Or(Undefined),\n});\n\nexport type StoryApiModel = $Static<typeof StoryApiModel>;\n\nexport function convertToStoriesIds(apiModel: StoriesIdsApiModel): StoriesIds {\n  return apiModel.map((item) => item);\n}\n\nexport function convertToStory({\n  id,\n  by: apiBy,\n  dead,\n  deleted,\n  kids,\n  parent,\n  score,\n  text,\n  time,\n  title: apiTitle,\n  type,\n  url,\n  descendants,\n}: StoryApiModel): Story {\n  return {\n    id,\n    by: apiBy ?? 'anonym',\n    dead,\n    deleted,\n    kids,\n    parent,\n    score,\n    text,\n    time,\n    title: apiTitle ?? '',\n    type,\n    url,\n    descendants,\n  };\n}\n","import {\n  StoriesIdsApiModel,\n  convertToStoriesIds,\n  convertToStory,\n  StoryApiModel,\n} from '../models/apiModels';\nimport { StoriesIds, Story } from '../types/story';\n\nconst baseUrl = 'https://hacker-news.firebaseio.com/v0/';\nconst itemPath = 'item/';\nconst jsonFormat = '.json?print=pretty';\n\nfunction handleErrors(response: Response) {\n  if (!response.ok) {\n    throw Error(\n      `HTTP error ${response.status} ${response.statusText} url: ${response.url}`,\n    );\n  }\n  return response;\n}\n\nasync function getStoriesIdArray(categoryPath: string): Promise<StoriesIds> {\n  const responseApi = await fetch(`${baseUrl}${categoryPath}${jsonFormat}`)\n    .then(handleErrors)\n    .then((resp) => resp.json());\n  const apiModel = StoriesIdsApiModel.check(responseApi);\n  return convertToStoriesIds(apiModel);\n}\n\nexport function getTopStoriesIdArray(): Promise<StoriesIds> {\n  return getStoriesIdArray('topstories');\n}\n\nexport function getAskStoriesIdArray(): Promise<StoriesIds> {\n  return getStoriesIdArray('askstories');\n}\n\nexport function getShowStoriesIdArray(): Promise<StoriesIds> {\n  return getStoriesIdArray('showstories');\n}\n\nexport function getJobStoriesIdArray(): Promise<StoriesIds> {\n  return getStoriesIdArray('jobstories');\n}\n\nexport async function getStoryById(id: number): Promise<Story> {\n  const url = baseUrl + itemPath + id + jsonFormat;\n  const responseApi = await fetch(url)\n    .then(handleErrors)\n    .then((resp) => resp.json());\n  const apiModel = StoryApiModel.check(responseApi);\n  return convertToStory(apiModel);\n}\n\nexport function getStoriesByArrayId(ids: StoriesIds): Promise<Story[]> {\n  return Promise.all(ids.map((storyId) => getStoryById(storyId)));\n}\n","import {\n  createSlice,\n  PayloadAction,\n  createEntityAdapter,\n  EntityState,\n} from '@reduxjs/toolkit';\nimport { Story, StoriesIds } from '../types/story';\nimport { AppThunk, RequestInfo } from './types';\nimport { getStoriesByArrayId } from '../service/hackerNewsService';\n\nconst storyAdapter = createEntityAdapter<Story>({\n  selectId: (story) => story.id,\n  sortComparer: (a, b) => a.id - b.id,\n});\n\nexport const getInitialState = (): EntityState<Story> & RequestInfo =>\n  storyAdapter.getInitialState<RequestInfo>({\n    loadStage: 'none',\n  });\n\nconst storiesSlice = createSlice({\n  name: 'stories',\n  initialState: getInitialState(),\n  reducers: {\n    fetchStoriesRequest(state) {\n      state.loadStage = 'requested';\n    },\n    fetchStoriesSucceed(state, { payload }: PayloadAction<Story[]>) {\n      state.loadStage = 'succeeded';\n      storyAdapter.setAll(state, payload);\n    },\n    fetchNextPageStoriesSucceed(state, { payload }: PayloadAction<Story[]>) {\n      state.loadStage = 'succeeded';\n      storyAdapter.addMany(state, payload);\n    },\n    fetchStoriesFailed(state) {\n      state.loadStage = 'failed';\n    },\n    resetStories: () => getInitialState(),\n  },\n});\n\nexport const {\n  fetchStoriesRequest,\n  fetchStoriesSucceed,\n  fetchStoriesFailed,\n  fetchNextPageStoriesSucceed,\n} = storiesSlice.actions;\n\nexport const { resetStories } = storiesSlice.actions;\n\nexport const fetchStories = (\n  ids: StoriesIds,\n  isNew: boolean,\n): AppThunk => async (dispatch) => {\n  dispatch(fetchStoriesRequest());\n  try {\n    const stories = await getStoriesByArrayId(ids);\n    if (isNew) {\n      dispatch(fetchStoriesSucceed(stories));\n    } else {\n      dispatch(fetchNextPageStoriesSucceed(stories));\n    }\n  } catch (e) {\n    console.log(e);\n    dispatch(fetchStoriesFailed());\n  }\n};\n\nexport const { selectAll, selectTotal } = storyAdapter.getSelectors();\n\nexport default storiesSlice.reducer;\n","import React from 'react';\nimport { Dot } from 'react-animated-dots';\n\nexport const Loader: React.FC = () => {\n  return (\n    <>\n      <Dot>.</Dot>\n      <Dot>.</Dot>\n      <Dot>.</Dot>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport * as Colors from '../common/Colors';\n\nexport const StoryWrapper = styled.div`\n  padding: 10px;\n  border-bottom: 1px solid ${Colors.DarkerGray};\n  word-wrap: break-word;\n`;\n\nexport const StoryTitle = styled.a`\n  font-size: 20px;\n  text-decoration: none;\n  color: ${Colors.WeakGray};\n`;\n\nexport const StoryAttributes = styled.span`\n  font-size: 12px;\n`;\n\nexport const StoryLink = styled(Link)`\n  font-size: 12px;\n  color: ${Colors.WeakGray};\n  text-decoration: underline;\n`;\n","export function hoursAgoFromDate(dateTime: number): number {\n  return new Date(Date.now() - dateTime * 1000).getHours();\n}\n","import React, { useMemo, memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Story } from '../types/story';\nimport {\n  StoryWrapper,\n  StoryTitle,\n  StoryAttributes,\n  StoryLink,\n} from '../styles/StoryView';\nimport { hoursAgoFromDate } from '../utils';\n\ntype StoryViewProps = {\n  story: Story;\n};\n\nexport const StoryView: React.FC<StoryViewProps> = memo(({ story }) => {\n  const hourAgo = useMemo(() => hoursAgoFromDate(story.time), [story.time]);\n  const { t } = useTranslation('views');\n  const content = useMemo(() => {\n    if (story.kids != null) {\n      return `${story?.kids.length} comments`;\n    }\n    return 'discuss';\n  }, [story]);\n\n  const path = `/story/${story.id}/comments`;\n\n  return (\n    <StoryWrapper>\n      <StoryTitle href={story.url}>{story.title}</StoryTitle>\n      <div>\n        <StoryAttributes>{`${story.score} ${t('storiesView.pointsBy')} ${\n          story.by\n        } | ${hourAgo} ${t('hoursAgo')} `}</StoryAttributes>\n        <StoryLink to={path}>{content}</StoryLink>\n      </div>\n    </StoryWrapper>\n  );\n});\n","import styled from 'styled-components';\nimport * as Colors from '../common/Colors';\n\nexport const StoryListWrapper = styled.div`\n  border-radius: 5px;\n  background-color: ${Colors.Gray};\n  color: ${Colors.WeakGray};\n  margin-bottom: 1px;\n`;\n\nexport const LoadMoreButton = styled.button`\n  background-color: ${Colors.Transparent};\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n  overflow: hidden;\n  height: 50px;\n  width: 100%;\n  color: ${Colors.WeakGray};\n  font-size: 17px;\n  outline: none;\n`;\n\nexport const ButtonLoaderWrapper = styled('div')`\n  position: relative;\n  top: -20px;\n  text-align: Center;\n  font-size: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled('div')`\n  height: 90px;\n  text-align: Center;\n  font-size: 50px;\n`;\n","import { useState, useEffect } from 'react';\nimport { LoadStage } from '../store/types';\nimport { StoriesIds } from '../types/story';\nimport { CategoryStories } from '../types/common';\nimport {\n  getTopStoriesIdArray,\n  getAskStoriesIdArray,\n  getJobStoriesIdArray,\n  getShowStoriesIdArray,\n} from '../service/hackerNewsService';\n\nfunction getStoriesIds(categoryStories: CategoryStories) {\n  switch (categoryStories) {\n    case 'top':\n      return getTopStoriesIdArray();\n    case 'ask':\n      return getAskStoriesIdArray();\n    case 'job':\n      return getJobStoriesIdArray();\n    case 'show':\n      return getShowStoriesIdArray();\n    default:\n      throw Error(`unsupported category: ${categoryStories}`);\n  }\n}\n\nexport function useFetchStoriesIds(\n  categoryStories: CategoryStories,\n): [StoriesIds | null, LoadStage] {\n  const [storiesIds, setStoriesIds] = useState<StoriesIds | null | null>(null);\n  const [loadStageStory, setLoadStageStory] = useState<LoadStage>('none');\n\n  useEffect(() => {\n    setLoadStageStory('requested');\n    getStoriesIds(categoryStories)\n      .then((res) => {\n        setStoriesIds(res.sort((a, b) => a - b));\n        setLoadStageStory('succeeded');\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoadStageStory('failed');\n      });\n  }, [categoryStories, setLoadStageStory, setStoriesIds]);\n\n  return [storiesIds, loadStageStory];\n}\n","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { useLocation } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport { Loader } from './Loader';\nimport { Story, StoriesIds } from '../types/story';\nimport { pathToCategory } from '../mappers/pathToCategory';\nimport { StoryView } from './StoryView';\nimport {\n  StoryListWrapper,\n  LoadMoreButton,\n  ButtonLoaderWrapper,\n} from '../styles/StoriesListView';\nimport { LoaderWrapper } from '../styles/Loader';\nimport { countStoriesByPage } from '../common/Constants';\nimport { useFetchStoriesIds } from '../hooks/useFetchStoriesIds';\n\ntype StoriesListViewProps = {\n  isLoading: boolean;\n  fetchStories: (ids: StoriesIds, isNew: boolean) => void;\n  resetStories: () => void;\n  stories: Story[];\n  hasData: boolean;\n};\n\nexport const StoriesListView: React.FC<StoriesListViewProps> = ({\n  fetchStories,\n  isLoading,\n  stories,\n  hasData,\n  resetStories,\n}) => {\n  const { t } = useTranslation('views');\n  const [page, setPage] = useState<number>(1);\n  const { pathname } = useLocation();\n\n  const category = useMemo(() => pathToCategory(pathname), [pathname]);\n  const [storiesIds, idsLoadStage] = useFetchStoriesIds(category);\n\n  useEffect(() => {\n    resetStories();\n    setPage(1);\n  }, [category, setPage]);\n\n  useEffect(() => {\n    if (storiesIds) {\n      fetchStories(storiesIds.slice(0, countStoriesByPage), true);\n    }\n  }, [storiesIds]);\n\n  const handleLoadMoreClick = useCallback(() => {\n    if (storiesIds) {\n      const nextPageIds = storiesIds.splice(\n        page * countStoriesByPage,\n        countStoriesByPage,\n      );\n      fetchStories(nextPageIds, false);\n      setPage((prev) => prev + 1);\n    }\n  }, [setPage, storiesIds, page, fetchStories]);\n\n  return (\n    <StoryListWrapper>\n      {idsLoadStage === 'requested' || !hasData ? (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      ) : (\n        <>\n          {stories.map((story) => (\n            <StoryView key={`st-${story.id}`} story={story} />\n          ))}\n          <LoadMoreButton onClick={handleLoadMoreClick}>\n            {isLoading && hasData ? (\n              <ButtonLoaderWrapper>\n                <Loader />\n              </ButtonLoaderWrapper>\n            ) : (\n              t('storiesView.loadMoreBtn')\n            )}\n          </LoadMoreButton>\n        </>\n      )}\n    </StoryListWrapper>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { State } from '../store/types';\nimport { isLoading } from '../store/selectors';\nimport {\n  selectAll as selectAllStories,\n  selectTotal,\n} from '../store/storiesStore';\n\nconst getStoriesState = createSelector(\n  (state: State) => state.stories,\n  (state) => state,\n);\n\nexport const isStoriesLoading = createSelector(getStoriesState, (state) =>\n  isLoading(state),\n);\n\nexport const getStories = createSelector(getStoriesState, (state) =>\n  selectAllStories(state),\n);\n\nexport const hasData = createSelector(\n  getStoriesState,\n  (state) => selectTotal(state) !== 0,\n);\n","import { RequestableState } from './types';\n\nexport function isLoading<TEntity>(state: RequestableState<TEntity>): boolean {\n  return state.loadStage === 'requested';\n}\n","import { connect } from 'react-redux';\nimport { fetchStories, resetStories } from '../store/storiesStore';\nimport { StoriesListView } from '../components/StoriesListView';\nimport { State } from '../store/types';\nimport {\n  isStoriesLoading,\n  getStories,\n  hasData,\n} from '../selectors/storiesListViewSelectors';\n\nconst mapStateToProps = (state: State) => ({\n  isLoading: isStoriesLoading(state),\n  stories: getStories(state),\n  hasData: hasData(state),\n});\n\nconst mapDispatchToProps = {\n  fetchStories,\n  resetStories,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoriesListView);\n","import { CategoryStories } from '../types/common';\n\nexport function pathToCategory(path: string): CategoryStories {\n  const purePath = path.substr(1, path.length - 1);\n  switch (purePath) {\n    case 'top':\n      return 'top';\n    case 'ask':\n      return 'ask';\n    case 'job':\n      return 'job';\n    case 'show':\n      return 'show';\n    default:\n      throw new Error('incorrect path');\n  }\n}\n","export const countStoriesByPage = 10;\n","import styled from 'styled-components';\nimport * as Colors from '../common/Colors';\n\nexport const CommentsListWrapper = styled.div`\n  border-radius: 5px;\n  background-color: ${Colors.Gray};\n  color: ${Colors.WeakGray};\n  margin-bottom: 1px;\n`;\n\nexport const StoryWrapper = styled.div`\n  border-radius: 5px;\n  background-color: ${Colors.Gray};\n  color: ${Colors.WeakGray};\n  padding: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const StoryTitle = styled.div`\n  font-size: 25px;\n  font-weight: bold;\n`;\n","import styled from 'styled-components';\nimport * as Colors from '../common/Colors';\n\nexport const CommentsWrapper = styled.div`\n  padding: 10px;\n  border-bottom: 1px solid ${Colors.DarkerGray};\n  word-wrap: break-word;\n`;\n\nexport const CommentsAttributes = styled.div`\n  font-size: 12px;\n`;\n","import parse from 'html-react-parser';\nimport { useTranslation } from 'react-i18next';\nimport React, { useMemo, memo } from 'react';\nimport { Story } from '../types/story';\nimport { CommentsWrapper, CommentsAttributes } from '../styles/Comment';\nimport { hoursAgoFromDate } from '../utils';\n\ntype CommentProps = {\n  data: Story;\n};\n\nexport const Comment: React.FC<CommentProps> = memo(({ data }) => {\n  const { t } = useTranslation('views');\n  const hourAgo = useMemo(() => hoursAgoFromDate(data.time), [data.time]);\n  return (\n    <CommentsWrapper>\n      <CommentsAttributes>{` ${t('commentsView.by')} ${\n        data.by\n      } | ${hourAgo} ${t('hoursAgo')}`}</CommentsAttributes>\n      <div>{parse(data?.text ?? '')}</div>\n    </CommentsWrapper>\n  );\n});\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { useFetchStory } from '../hooks/useFetchStory';\nimport { useFetchComments } from '../hooks/useFetchComments';\nimport { Loader } from './Loader';\nimport { LoaderWrapper } from '../styles/Loader';\nimport {\n  StoryWrapper,\n  StoryTitle,\n  CommentsListWrapper,\n} from '../styles/CommentsListView';\nimport { LoadStage } from '../store/types';\nimport { Comment } from './Comment';\n\ntype StoryUrlParams = {\n  storyId: string;\n};\n\nfunction useIsLoading(\n  storyLoadStage: LoadStage,\n  commentsLoadStage: LoadStage,\n): boolean {\n  return storyLoadStage === 'requested' || commentsLoadStage === 'requested';\n}\n\nexport const CommentsListView: React.FC = () => {\n  const { t } = useTranslation('views');\n  const { storyId } = useParams<StoryUrlParams>();\n\n  const [story, storyLoadStage] = useFetchStory(storyId);\n  const [comments, commentsLoadStage] = useFetchComments(story?.kids);\n\n  const isLoading = useIsLoading(storyLoadStage, commentsLoadStage);\n\n  return isLoading ? (\n    <LoaderWrapper>\n      <Loader />\n    </LoaderWrapper>\n  ) : (\n    <>\n      <StoryWrapper>\n        <StoryTitle>{story?.title}</StoryTitle>\n        <span>\n          {story?.score} {t('commentsView.pointsBy')} {story?.by} |{' '}\n          {t('commentsView.comments')}: {story?.descendants}\n        </span>\n      </StoryWrapper>\n      <CommentsListWrapper>\n        {comments?.map((comment) => (\n          <Comment key={`key-comment-${comment.id}`} data={comment} />\n        ))}\n      </CommentsListWrapper>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { LoadStage } from '../store/types';\nimport { Story } from '../types/story';\nimport { getStoryById } from '../service/hackerNewsService';\n\nexport function useFetchStory(id: string): [Story | null, LoadStage] {\n  const [story, setStory] = useState<Story | null>(null);\n  const [loadStageStory, setLoadStageStory] = useState<LoadStage>('none');\n\n  useEffect(() => {\n    setLoadStageStory('requested');\n    getStoryById(Number(id))\n      .then((res) => {\n        setStory(res);\n        setLoadStageStory('succeeded');\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoadStageStory('failed');\n      });\n  }, [id, setLoadStageStory, setStory]);\n\n  return [story, loadStageStory];\n}\n","import { useState, useEffect } from 'react';\nimport { LoadStage } from '../store/types';\nimport { Story } from '../types/story';\nimport { getStoryById } from '../service/hackerNewsService';\n\nexport function useFetchComments(\n  ids: number[] | undefined,\n): [Story[] | null, LoadStage] {\n  const [comments, setComments] = useState<Story[] | null>(null);\n  const [loadStageComments, setLoadStageComments] = useState<LoadStage>('none');\n\n  useEffect(() => {\n    if (ids === undefined) {\n      return;\n    }\n    setLoadStageComments('requested');\n\n    Promise.all(ids.map((item) => getStoryById(item)))\n      .then((fetchedComments) => {\n        setComments(fetchedComments);\n        setLoadStageComments('succeeded');\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoadStageComments('failed');\n      });\n  }, [ids, setComments, setLoadStageComments]);\n\n  return [comments, loadStageComments];\n}\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  public static getDerivedStateFromError(): State {\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render(): React.ReactNode {\n    const { hasError } = this.state;\n    const { children } = this.props;\n    if (hasError) {\n      return <h1>Sorry.. there was an error</h1>;\n    }\n\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport storiesReducer from './storiesStore';\n\nexport default combineReducers({\n  stories: storiesReducer,\n});\n","import navMenuEn from './en/navMenu.json';\nimport pageNotFoundEn from './en/pageNotFound.json';\nimport viewsEn from './en/views.json';\n\nconst resources = {\n  en: {\n    navMenu: navMenuEn,\n    pageNotFound: pageNotFoundEn,\n    views: viewsEn,\n  },\n};\nexport const languages = Object.keys(resources);\n\nexport default resources;\n","import resources from './resources';\n\nexport const config = {\n  interpolation: { escapeValue: false },\n  lng: 'en',\n  fallbackLng: 'en',\n  cache: {\n    enabled: true,\n  },\n  resources,\n};\nexport { resources };\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport i18next from 'i18next';\nimport { Provider } from 'react-redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { GlobalStyles } from '../styles/GlobalStyles';\nimport { NavMenu } from './NavMenu';\nimport DefaultPage from './DefaultPage';\nimport { PageNotFound } from './PageNotFound';\nimport { BodyWrapper } from '../styles/App';\nimport StoriesListView from '../containers/StoriesListViewContainer';\nimport { CommentsListView } from './CommentsListView';\nimport ErrorBoundary from './ErrorBoundary';\nimport rootReducer from '../store/rootReducer';\nimport { config as i18nextConfig } from '../misc/translations/index';\n\ni18next.init(i18nextConfig);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware(),\n});\n\nconst listMenuItem: string[] = ['top', 'ask', 'job', 'show'];\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <I18nextProvider i18n={i18next}>\n        <Router basename=\"/\">\n          <GlobalStyles />\n          <ErrorBoundary>\n            <BodyWrapper>\n              <NavMenu menuItems={listMenuItem} />\n              <Switch>\n                <Route exact path=\"/\" component={DefaultPage} />\n                <Route\n                  path={listMenuItem.map((item) => `/${item}`)}\n                  component={() => <StoriesListView />}\n                />\n                <Route\n                  path=\"/story/:storyId/comments\"\n                  component={CommentsListView}\n                />\n                <Route path=\"*\" component={PageNotFound} />\n              </Switch>\n            </BodyWrapper>\n          </ErrorBoundary>\n        </Router>\n      </I18nextProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}